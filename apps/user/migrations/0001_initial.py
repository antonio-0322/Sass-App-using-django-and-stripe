# Generated by Django 4.2.2 on 2023-08-01 05:30

import apps.user.managers
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('setup', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='Last Update')),
                ('email', models.EmailField(error_messages={'unique': 'This email address is already registered.'}, max_length=254, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(blank=True, max_length=35, null=True)),
                ('last_name', models.CharField(blank=True, max_length=35, null=True)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=50, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', apps.user.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserEmailVerificationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('code', models.CharField(max_length=45)),
                ('expires_in', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_verification_codes',
            },
        ),
        migrations.CreateModel(
            name='UserSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='Last Update')),
                ('name', models.CharField(max_length=35)),
                ('experience_in_years', models.PositiveIntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_skills',
            },
        ),
        migrations.CreateModel(
            name='UserResume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='Last Update')),
                ('file', models.FileField(upload_to='', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'docx'])])),
                ('display_name', models.CharField(max_length=15)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resumes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_resumes',
            },
        ),
        migrations.CreateModel(
            name='UserJobTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='Last Update')),
                ('job_title', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_titles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_job_titles',
            },
        ),
        migrations.CreateModel(
            name='UserJobSearchFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='Last Update')),
                ('value', models.CharField(blank=True, max_length=300, null=True)),
                ('is_multiple', models.BooleanField(default=False)),
                ('values', models.JSONField(null=True)),
                ('metadata', models.JSONField(null=True)),
                ('job_search_filter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setup.jobsearchfilter')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_search_filters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_job_search_filters',
            },
        ),
        migrations.CreateModel(
            name='UserAdditionalQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='Last Update')),
                ('value', models.CharField(blank=True, max_length=300, null=True)),
                ('is_multiple', models.BooleanField(default=False)),
                ('values', models.JSONField(null=True)),
                ('metadata', models.JSONField(null=True)),
                ('additional_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='setup.additionalquestion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_questions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_additional_questions',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='selected_resume',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='selected_resume', to='user.userresume'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
